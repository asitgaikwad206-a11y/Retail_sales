-- My Analysis & Findings
-- Q.1 Write a SQL query to retrieve all columns for sales made on '2022-11-05
select *
from retail_sql.sql - retail sales analysis_utf
where sale_date='2022-11-05';

-- Q.2 Write a SQL query to retrieve all transactions where the category is 'Clothing' and the quantity sold is more than 10 in the month of Nov-2022
SELECT *
FROM retail_sql.sql - retail sales analysis_utf
WHERE category = 'Clothing'
  AND quantiy > 10
  AND sale_date BETWEEN '2022-11-01' AND '2022-11-30';
-- Q.3 Write a SQL query to calculate the total sales (total_sale) for each category.
SELECT category, SUM(total_sale) AS total_sales
FROM retail_sql.sql - retail sales analysis_utf
GROUP BY category;

-- Q.4 Write a SQL query to find the average age of customers who purchased items from the 'Beauty' category.
select AVG(age) as age,category 
from retail_sql.sql - retail sales analysis_utf
where category='Beauty' group by 2;
-- Q.5 Write a SQL query to find all transactions where the total_sale is greater than 1000.
select *
from retail_sql.sql - retail sales analysis_utf
where total_sale>1000
order by total_sale desc;
-- Q.6 Write a SQL query to find the total number of transactions (transaction_id) made by each gender in each category.
select count(ï»¿transactions_id) as total_transactions,gender,category
from retail_sql.sql - retail sales analysis_utf
group by gender,category

-- Q.7 Write a SQL query to calculate the average sale for each month. Find out best selling month in each year
select year(sale_date) as year,month(sale_date) as month,avg(total_sale) as avg_sales
from retail_sql.sql - retail sales analysis_utf
group by year(sale_date),month(sale_date)
order by year,month

WITH monthly_sales AS (
    SELECT 
        YEAR(sale_date) AS year,
        MONTH(sale_date) AS month,
        AVG(total_sale) AS avg_sales
    FROM retail_sql.sql - retail sales analysis_utf
    GROUP BY YEAR(sale_date), MONTH(sale_date)
)
SELECT year, month, avg_sales
FROM (
    SELECT 
        year,
        month,
        avg_sales,
        ROW_NUMBER() OVER (PARTITION BY year ORDER BY avg_sales DESC) AS rn
    FROM monthly_sales
) ranked
WHERE rn = 1;

-- Q.8 Write a SQL query to find the top 5 customers based on the highest total sales 
SELECT 
    customer_id,
    SUM(total_sale) AS total_sales
FROM retail_sql.sql - retail sales analysis_utf
GROUP BY customer_id
ORDER BY total_sales DESC
LIMIT 5;

-- Q.9 Write a SQL query to find the number of unique customers who purchased items from each category.
select count(distinct customer_id) as unique_customers, category
from 
retail_sql.sql - retail sales analysis_utf
group by 2



-- Q.10 Write a SQL query to create each shift and number of orders (Example Morning <=12, Afternoon Between 12 & 17, Evening >17)
SELECT 
    CASE
        WHEN sale_time <= '12:00:00' THEN 'Morning'
        WHEN sale_time BETWEEN '12:00:01' AND '17:00:00' THEN 'Afternoon'
        ELSE 'Evening'
    END AS shift,
    COUNT(*) AS total_orders
FROM retail_sql.sql - retail sales analysis_utf
GROUP BY shift;
